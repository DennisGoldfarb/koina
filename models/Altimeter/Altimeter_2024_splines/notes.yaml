description: |
  <img src="images/Altimeter/altimeter_architecture_splines.svg" alt="Altimeter splines architecture" width="600px"> 
  Altimeter predicts HCD MS2 spectra for peptides. This particular model predicts the spline coefficients and knots that describe a fragment's abundance over an NCE range of 20-40. It is trained to predict the total abundance of a fragment (i.e. sum of all isotopes) rather than the monoisotopic peak. It includes precursor and immonium ions. Annotation names follow the mzPAF specification (https://www.psidev.info/mzPAF). The splines can be used to quickly compute predicted spectral libraries at various NCEs without a GPU, as is done by Pioneer (https://github.com/nwamsley1/Pioneer.jl). The fragments are sorted by their spline integral from NCE 20-40 and the top 200 fragments are returned. 
  Altimeter was trained on the ProteomeTools dataset (tryptic, lysC, aspN, and HLA) that was re-processed in-house. The dataset was split 70/20/10 at the peptide level for training, validation, and testing. It achieved a median normalized spectral angle of 0.941 on the test set.
  
  Input limits:<ul><li>Length: 6-40 amino acids (6-30 recommended).</li><li>Charge: 1-7 (1-4 recommended).</li><li>PTMs: Variable oxidation of methionines and static carbamidomethylation of cysteines.</li></ul>Notes on evaluating splines:<ul><li>They are cubic B-splines.</li><li>The knot positions are the same for all predictions.</li><li>The coefficients are output in the order: c0, c1, c2, c3. For a given peptide, c0 is output for all its fragments, followed by all c1s, etc. This is then repeated for the next peptide.</li><li>Extrapolation is not performed outside the spline's domain. Instead, the splines are evaluated with partial basis support. This is equivalent to repeating the knots at the ends and adding coefficients of 0. For example:</li>
    <code>from scipy.interpolate import BSpline</code>
    <code>knots = [6, 6, 6, 6, 13, 21, 24, 32, 39, 48, 55, 55, 55, 55]</code>
    <code>coefficients = [0, 0, 0, 1.0, 0.6, 0.4, 0.9, 0, 0, 0]</code>
    <code>s = BSpline(knots, coefficients, 3, extrapolate=False)</code> </ul>
citation: |
  BioRxiv coming soon.

tag: "Intensity"

examples:
  inputs:
    [
      {
          "name": "peptide_sequences",
          "httpdtype": "BYTES",
          "shape": "[2,1]",
          "data": '["AAAAAKAK", "AC[UNIMOD:4]DEFGHIKLM[UNIMOD:35]NPQRSTVWY"]'
      },
      {
          "name": "precursor_charges",
          "httpdtype": "INT32",
          "shape": "[2,1]",
          "data": '[1,2]'
      }
    ]
