name: Run tests, styling and linting

on:
  pull_request:

jobs:

  mergeCI:
    runs-on: [self-hosted,Linux,X64,gpu]
    permissions:
      contents: read
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Startup
        run: docker compose --env-file .env.ci up -d serving develop --build

      - name: Styling
        run: docker compose --env-file .env.ci exec develop black .

      - name: Linting
        run: docker compose --env-file .env.ci exec develop koina_lint.sh --fail-under=6

      - name: Testing
        run: docker compose --env-file .env.ci exec develop koina_test.sh

      - name: Shutdown
        if: always()
        run: docker compose --env-file .env.ci down
        
      - name: Cleanup
        if: always()
        run: docker compose --env-file .env.ci rm

  release_ui:
    runs-on: [self-hosted,Linux,X64,gpu]
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Startup
        run: docker compose --env-file .env.ci up -d serving develop web --build

      - name: Install npm dependencies
        run: docker compose --env-file .env.ci run web npm install

      - name: Wait for serving
        run: docker compose --env-file .env.ci exec develop koina_test.sh

      - name: Update OpenAPI
        run: docker compose --env-file .env.ci exec develop python web/openapi/openapi_gen.py 

      - name: Build UI
        run: docker compose --env-file .env.ci run web npm run generate

      - name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: web/.output/public
          remote: /var/www/koina/
          host: ${{ secrets.WEBSERVER }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.PASSWORD }}

      - name: Shutdown
        if: always()
        run: docker compose --env-file .env.ci down
        
      - name: Cleanup
        if: always()
        run: docker compose --env-file .env.ci rm